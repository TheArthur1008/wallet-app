{"version":3,"file":"static/js/427.ea95b26b.chunk.js","mappings":"yJACA,MAAuB,uBAAvB,EAAqG,uBAArG,EAAoI,wBAApI,EAAkK,sBAAlK,EAA4W,4BAA5W,EAAga,wCAAha,EAAkd,0BAAld,EAAsf,0B,oBCChfA,EAAuBC,EAAAA,KAAaC,MAAM,CAC9CC,MAAOF,EAAAA,KACJE,MAAM,8BACNC,IAAI,EAAG,sCACPC,IAAI,IAAK,WACTC,QACC,qIACA,8BAEDC,SAAS,0BACZC,SAAUP,EAAAA,KACPG,IAAI,EAAG,sCACPC,IAAI,GAAI,2CACRC,QACC,qDACA,sEAEDC,SAAS,0BACZE,gBAAiBR,EAAAA,KACdS,MAAM,CAACT,EAAAA,GAAQ,aAAc,wBAC7BM,SAAS,0BACZI,SAAUV,EAAAA,KACPG,IAAI,EAAG,sCACPC,IAAI,GAAI,2CACRC,QACC,wDACA,mBAEDC,SAAS,4BAERK,EAAwBX,EAAAA,KAAaC,MAAM,CAC/CC,MAAOF,EAAAA,KACJE,MAAM,8BACNG,QACC,qIACA,8BAEDD,IAAI,IAAK,WACTE,SAAS,0BACZC,SAAUP,EAAAA,KACPG,IAAI,EAAG,sCACPC,IAAI,GAAI,UACRC,QACC,qDACA,sEAEDC,SAAS,4BAEP,SAASM,EAAiBC,GAC/B,MAAa,WAATA,EACKd,EAEAY,CAEV,C,qJCTD,EA7C8B,SAAC,GAAkB,IAAhBJ,EAAe,EAAfA,SACzBO,EAAaC,IAAOR,GACpBS,EAA0B,IAAnBF,EAAWG,MAAe,EAEjCC,EAAoB,WACxB,OAAQJ,EAAWG,OACjB,KAAK,EAEL,KAAK,EAEL,KAAK,EAEL,KAAK,EAEL,KAAK,EACH,MAAO,UACT,QACE,MAAO,OAEZ,EAUD,OACE,+BACE,gBACEE,MAAO,CACLC,UAAW,OACXC,WAAY,UACZC,OAAQ,oBACRC,aAAc,QALlB,UAQE,gBAAKJ,MAlBwB,CACjCK,MAAM,GAAD,OAAKR,EAAL,KACLK,WAAYH,IACZO,OAAQ,MACRF,aAAc,OACdG,UAAW,4CAiBd,EC4JD,EA7LwB,SAAC,GAAc,IAAZb,EAAW,EAAXA,KACnBc,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAAC,KAAD,CACEC,cAAe,CACbnB,SAAU,GACVR,MAAO,GACPK,SAAU,GACVC,gBAAiB,IAEnBI,iBAAkBA,EAAiBC,GACnCiB,gBAAc,EACdC,SAAU,SAAAC,GAEJL,EADK,WAATd,GACaoB,EAAAA,EAAAA,IAASD,IACTE,EAAAA,EAAAA,IAAMF,GACpB,EAbH,SAeG,gBACCA,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aAND,OAQC,SAAC,KAAD,CAAMC,UAAWC,EAAQV,SAAUQ,EAAnC,SACY,WAAT1B,GACC,iCACE,iBAAK2B,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAOC,IAAKC,EAAYC,IAAI,UAC5C,eAAIJ,UAAWC,EAAf,wBAGF,SAACI,EAAA,EAAD,CACEL,UAAWC,EACXK,WAAY,CACVC,cACE,SAACC,EAAA,EAAD,CAAMC,MAAM,SAASC,SAAS,QAA9B,UACE,SAACC,EAAA,EAAD,OAINC,GAAG,QACHC,KAAK,QACLC,MAAM,SACNC,MAAOvB,EAAO9B,MACdsD,SAAUnB,EACVoB,OAAQnB,EACRoB,MAAOtB,EAAQlC,OAASyD,QAAQxB,EAAOjC,OACvC0D,WAAYxB,EAAQlC,OAASiC,EAAOjC,SAGtC,SAAC2C,EAAA,EAAD,CACEL,UAAWC,EACXK,WAAY,CACVC,cACE,SAACC,EAAA,EAAD,CAAMC,MAAM,SAASC,SAAS,QAA9B,UACE,SAACW,EAAA,EAAD,OAINT,GAAG,WACHC,KAAK,WACLC,MAAM,WACNzC,KAAK,WACL0C,MAAOvB,EAAOzB,SACdiD,SAAUnB,EACVoB,OAAQnB,EACRoB,MAAOtB,EAAQ7B,UAAYoD,QAAQxB,EAAO5B,UAC1CqD,WAAYxB,EAAQ7B,UAAY4B,EAAO5B,YAGzC,SAACsC,EAAA,EAAD,CACEL,UAAWC,EACXK,WAAY,CACVC,cACE,SAACC,EAAA,EAAD,CAAMC,MAAM,SAASC,SAAS,QAA9B,UACE,SAACW,EAAA,EAAD,OAINT,GAAG,kBACHC,KAAK,kBACLC,MAAM,mBACNzC,KAAK,WACL0C,MAAOvB,EAAOxB,gBACdgD,SAAUnB,EACVoB,OAAQnB,EACRoB,MACEtB,EAAQ5B,iBAAmBmD,QAAQxB,EAAO3B,iBAE5CoD,WAAYxB,EAAQ5B,iBAAmB2B,EAAO3B,mBAEhD,SAAC,EAAD,CAAkBD,SAAUyB,EAAOzB,YACnC,SAACsC,EAAA,EAAD,CACEL,UAAWC,EACXK,WAAY,CACVC,cACE,SAACC,EAAA,EAAD,CAAMC,MAAM,SAASC,SAAS,QAA9B,UACE,SAACY,EAAA,EAAD,OAINV,GAAG,WACHC,KAAK,WACLC,MAAM,WACNzC,KAAK,OACL0C,MAAOvB,EAAOtB,SACd8C,SAAUnB,EACVoB,OAAQnB,EACRoB,MAAOtB,EAAQ1B,UAAYiD,QAAQxB,EAAOzB,UAC1CkD,WAAYxB,EAAQ1B,UAAYyB,EAAOzB,YAGzC,iBAAK8B,UAAWC,EAAhB,WACE,SAACsB,EAAA,EAAD,CACEvB,UAAWwB,IAAWvB,EAAWA,GACjC5B,KAAK,SAFP,qBAMA,SAAC,KAAD,CAAM2B,UAAWwB,IAAWvB,GAAYwB,GAAG,SAA3C,0BAMJ,iCACE,iBAAKzB,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAOC,IAAKC,EAAYC,IAAI,UAC5C,eAAIJ,UAAWC,EAAf,wBAEF,SAACI,EAAA,EAAD,CACEL,UAAWC,EACXK,WAAY,CACVC,cACE,SAACC,EAAA,EAAD,CAAMC,MAAM,SAASC,SAAS,QAA9B,UACE,SAACC,EAAA,EAAD,OAINC,GAAG,QACHC,KAAK,QACLC,MAAM,SACNC,MAAOvB,EAAO9B,MACdsD,SAAUnB,EACVoB,OAAQnB,EACRoB,MAAOtB,EAAQlC,OAASyD,QAAQxB,EAAOjC,OACvC0D,WAAYxB,EAAQlC,OAASiC,EAAOjC,SAEtC,SAAC2C,EAAA,EAAD,CACEL,UAAWC,EACXK,WAAY,CACVC,cACE,SAACC,EAAA,EAAD,CAAMC,MAAM,SAASC,SAAS,QAA9B,UACE,SAACW,EAAA,EAAD,OAINT,GAAG,WACHC,KAAK,WACLC,MAAM,WACNzC,KAAK,WACL0C,MAAOvB,EAAOzB,SACdiD,SAAUnB,EACVoB,OAAQnB,EACRoB,MAAOtB,EAAQ7B,UAAYoD,QAAQxB,EAAO5B,UAC1CqD,WAAYxB,EAAQ7B,UAAY4B,EAAO5B,YAEzC,iBAAKiC,UAAWC,EAAhB,WACE,SAACsB,EAAA,EAAD,CACEvB,UAAWwB,IAAWvB,EAAWA,GACjC5B,KAAK,SAFP,oBAMA,SAAC,KAAD,CAAM2B,UAAWwB,IAAWvB,GAAYwB,GAAG,UAA3C,2BA/JT,GAyKN,C,4FC/JD,UAlCc,WACZ,OACE,gBAAKzB,UAAWC,EAAAA,EAAAA,WAAhB,UACE,gBAAKD,UAAW0B,EAAAA,EAAAA,UAAhB,UACE,iBAAK1B,UAAWC,EAAAA,EAAAA,SAAhB,WACE,SAAC,IAAD,CACE0B,QAAS,CACTC,WAAY,sBACZC,YAAa,wBAHf,SAMG,gBAAED,EAAF,EAAEA,WAAYC,EAAd,EAAcA,YAAd,OACD,8BACGA,GAAeD,GACd,yBAEA,gBAAK5B,UAAWC,EAAAA,EAAAA,KAAhB,UACE,iBAAKD,UAAWC,EAAAA,EAAAA,eAAhB,WACE,gBAAKC,IAAK4B,EAAU1B,IAAI,cAAcJ,UAAWC,EAAAA,EAAAA,OACjD,eAAID,UAAWC,EAAAA,EAAAA,MAAf,+BARP,KAcH,gBAAKD,UAAWC,EAAAA,EAAAA,MAAhB,UACE,SAAC,IAAD,CAAU5B,KAAK,kBAM1B,C,qBCrCD,KAAgB,UAAY,iC,oBCA5B,KAAgB,WAAa,iCAAiC,cAAgB,oCAAoC,SAAW,+BAA+B,KAAO,2BAA2B,eAAiB,qCAAqC,IAAM,0BAA0B,MAAQ,4BAA4B,MAAQ,4B","sources":["webpack://react-wallet-app/./src/components/AuthForm/AuthForm.module.scss?60aa","components/AuthForm/validation/validationAuthForm.js","components/AuthForm/password-strength/password-strength.js","components/AuthForm/AuthForm.jsx","pages/Login/Login.jsx","webpack://react-wallet-app/./src/components/AuthForm/ContainerForm.module.scss?8f5e","webpack://react-wallet-app/./src/pages/Registration/registration.module.scss?eb7c"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"AuthForm_form__kV4hH\",\"mainAnimation\":\"AuthForm_mainAnimation__Clfbr\",\"logo\":\"AuthForm_logo__Bl03L\",\"title\":\"AuthForm_title__WkPPr\",\"img\":\"AuthForm_img__X7yf4\",\"MuiInputBase-input\":\"AuthForm_MuiInputBase-input__X4gXi\",\"MuiInputLabel-root\":\"AuthForm_MuiInputLabel-root__vJjDd\",\"MuiSvgIcon-root\":\"AuthForm_MuiSvgIcon-root__hLpNZ\",\"textField\":\"AuthForm_textField__WEKtJ\",\"loginFormBtnContainer\":\"AuthForm_loginFormBtnContainer__VLMbT\",\"btnForm\":\"AuthForm_btnForm__j6BNS\",\"current\":\"AuthForm_current__k4aV2\"};","import * as Yup from 'yup';\n\nconst authValidationSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Please enter correct email')\n    .min(2, 'Please enter more than 2 character')\n    .max(100, 'Max 100')\n    .matches(\n      /^(|(([A-Za-z0-9]+_+)|([A-Za-z0-9]+)|([A-Za-z0-9]+\\.+)|([A-Za-z0-9]+\\++))*[A-Za-z0-9]+@((\\w+)|(\\w+\\.))*\\w{1,63}\\.[a-zA-Z]{2,100})$/i,\n      'Please enter correct email'\n    )\n    .required('this field is required'),\n  password: Yup.string()\n    .min(6, 'Please enter more than 5 character')\n    .max(12, 'Please enter not more than 12 character')\n    .matches(\n      /(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,12}/,\n      'password must contain one number,uppercase and lowercase character'\n    )\n    .required('this field is required'),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password')], 'Passwords must match')\n    .required('this field is required'),\n  username: Yup.string()\n    .min(2, 'Please enter more than 1 character')\n    .max(12, 'Please enter not more than 12 character')\n    .matches(\n      /^(?!.*\\.\\.)(?!\\.)(?!.*\\.$)(?!\\d+$)[a-zA-Z0-9.]{2,12}$/,\n      'Name is invalid'\n    )\n    .required('this field is required'),\n});\nconst loginValidationSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Please enter correct email')\n    .matches(\n      /^(|(([A-Za-z0-9]+_+)|([A-Za-z0-9]+)|([A-Za-z0-9]+\\.+)|([A-Za-z0-9]+\\++))*[A-Za-z0-9]+@((\\w+)|(\\w+\\.))*\\w{1,63}\\.[a-zA-Z]{2,100})$/i,\n      'Please enter correct email'\n    )\n    .max(254, 'Max 254')\n    .required('this field is required'),\n  password: Yup.string()\n    .min(6, 'Please enter more than 5 character')\n    .max(12, 'Max 12')\n    .matches(\n      /(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,12}/,\n      'password must contain one number,uppercase and lowercase character'\n    )\n    .required('this field is required'),\n});\nexport function validationSchema(type) {\n  if (type === 'signUp') {\n    return authValidationSchema;\n  } else {\n    return loginValidationSchema;\n  }\n}\n","import zxcvbn from \"zxcvbn\";\n\nconst PasswordStrengthMeter = ({ password }) => {\n  const testResult = zxcvbn(password);\n  const num = (testResult.score * 100) / 4;\n\n  const funcProgressColor = () => {\n    switch (testResult.score) {\n      case 0:\n        return \"#24CCA7\";\n      case 1:\n        return \"#24CCA7\";\n      case 2:\n        return \"#24CCA7\";\n      case 3:\n        return \"#24CCA7\";\n      case 4:\n        return \"#24CCA7\";\n      default:\n        return \"none\";\n    }\n  };\n\n  const changePasswordColor = () => ({\n    width: `${num}%`,\n    background: funcProgressColor(),\n    height: \"5px\",\n    borderRadius: \"20px\",\n    boxShadow: \"0px 1px 8px rgba(36, 204, 167, 0.5)\",\n  });\n\n  return (\n    <>\n      <div\n        style={{\n          marginTop: \"10px\",\n          background: \"#E5F1EF\",\n          border: \"1px solid #E5F1EF\",\n          borderRadius: \"20px\",\n        }}\n      >\n        <div style={changePasswordColor()}></div>\n      </div>\n    </>\n  );\n};\n\nexport default PasswordStrengthMeter;\n","import s from './AuthForm.module.scss';\nimport { Formik, Form } from 'formik';\nimport { validationSchema } from './validation/validationAuthForm';\nimport { logIn, register } from 'redux/session/auth-operation';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport headerLogo from '../../assets/images/Logo.png';\nimport { Button, Icon, TextField } from '@mui/material';\nimport { Email, Lock, Person } from '@mui/icons-material';\nimport classNames from 'classnames';\nimport PasswordStrength from './password-strength/password-strength';\n\nexport const AuthForm = ({ type }) => {\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n      }}\n      validationSchema={validationSchema(type)}\n      validateOnBlur\n      onSubmit={values => {\n        type === 'signUp'\n          ? dispatch(register(values))\n          : dispatch(logIn(values));\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n      }) => (\n        <Form className={s.form} onSubmit={handleSubmit}>\n          {type === 'signUp' ? (\n            <>\n              <div className={s.logo}>\n                <img className={s.img} src={headerLogo} alt=\"logo\" />\n                <h1 className={s.title}>Wallet</h1>\n              </div>\n\n              <TextField\n                className={s.textField}\n                InputProps={{\n                  endAdornment: (\n                    <Icon color=\"action\" position=\"start\">\n                      <Email />\n                    </Icon>\n                  ),\n                }}\n                id=\"email\"\n                name=\"email\"\n                label=\"E-mail\"\n                value={values.email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={touched.email && Boolean(errors.email)}\n                helperText={touched.email && errors.email}\n              />\n\n              <TextField\n                className={s.textField}\n                InputProps={{\n                  endAdornment: (\n                    <Icon color=\"action\" position=\"start\">\n                      <Lock />\n                    </Icon>\n                  ),\n                }}\n                id=\"password\"\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                value={values.password}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={touched.password && Boolean(errors.password)}\n                helperText={touched.password && errors.password}\n              />\n\n              <TextField\n                className={s.textField}\n                InputProps={{\n                  endAdornment: (\n                    <Icon color=\"action\" position=\"start\">\n                      <Lock />\n                    </Icon>\n                  ),\n                }}\n                id=\"confirmPassword\"\n                name=\"confirmPassword\"\n                label=\"Confirm password\"\n                type=\"password\"\n                value={values.confirmPassword}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={\n                  touched.confirmPassword && Boolean(errors.confirmPassword)\n                }\n                helperText={touched.confirmPassword && errors.confirmPassword}\n              />\n              <PasswordStrength password={values.password} />\n              <TextField\n                className={s.textField}\n                InputProps={{\n                  endAdornment: (\n                    <Icon color=\"action\" position=\"start\">\n                      <Person />\n                    </Icon>\n                  ),\n                }}\n                id=\"username\"\n                name=\"username\"\n                label=\"Username\"\n                type=\"name\"\n                value={values.username}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={touched.username && Boolean(errors.username)}\n                helperText={touched.username && errors.username}\n              />\n\n              <div className={s.loginFormBtnContainer}>\n                <Button\n                  className={classNames(s.btnForm, s.current)}\n                  type=\"submit\"\n                >\n                  SignUp\n                </Button>\n                <Link className={classNames(s.btnForm)} to=\"/login\">\n                  login\n                </Link>\n              </div>\n            </>\n          ) : (\n            <>\n              <div className={s.logo}>\n                <img className={s.img} src={headerLogo} alt=\"logo\" />\n                <h1 className={s.title}>Wallet</h1>\n              </div>\n              <TextField\n                className={s.textField}\n                InputProps={{\n                  endAdornment: (\n                    <Icon color=\"action\" position=\"start\">\n                      <Email />\n                    </Icon>\n                  ),\n                }}\n                id=\"email\"\n                name=\"email\"\n                label=\"E-mail\"\n                value={values.email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={touched.email && Boolean(errors.email)}\n                helperText={touched.email && errors.email}\n              />\n              <TextField\n                className={s.textField}\n                InputProps={{\n                  endAdornment: (\n                    <Icon color=\"action\" position=\"start\">\n                      <Lock />\n                    </Icon>\n                  ),\n                }}\n                id=\"password\"\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                value={values.password}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={touched.password && Boolean(errors.password)}\n                helperText={touched.password && errors.password}\n              />\n              <div className={s.loginFormBtnContainer}>\n                <Button\n                  className={classNames(s.btnForm, s.current)}\n                  type=\"submit\"\n                >\n                  LogIn\n                </Button>\n                <Link className={classNames(s.btnForm)} to=\"/signup\">\n                  SignUp\n                </Link>\n              </div>\n            </>\n          )}\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default AuthForm;\n","import s from \"../Registration/registration.module.scss\";\nimport imgLogin from \"../../assets/images/imgLogin.png\";\nimport sContainer from \"../../components/AuthForm/ContainerForm.module.scss\";\nimport AuthForm from \"../../components/AuthForm/AuthForm\";\nimport Media from \"react-media\";\n\nconst Login = () => {\n  return (\n    <div className={s.registerBg}>\n      <div className={sContainer.container}>\n        <div className={s.mainPage}>\n          <Media\n            queries={{\n            smallWidth: \"(max-width: 1279px)\",\n            smallHeight: \"(max-height: 1009px)\",\n          }}\n          >\n            {({smallWidth, smallHeight,}) => (\n            <>\n              {smallHeight && smallWidth ? (\n                <></>\n                ) : (\n                <div className={s.left}>\n                  <div className={s.left__position}>\n                    <img src={imgLogin} alt=\"finance app\" className={s.img} />\n                    <h1 className={s.title}>Finance App</h1>\n                  </div>\n                </div>\n                )}\n            </>)}\n          </Media>\n          <div className={s.right}>\n            <AuthForm type=\"login\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContainerForm_container__SqnVP\"};","// extracted by mini-css-extract-plugin\nexport default {\"registerBg\":\"registration_registerBg__d+Atg\",\"containerForm\":\"registration_containerForm__50mOT\",\"mainPage\":\"registration_mainPage__zs9ZC\",\"left\":\"registration_left__FyB6S\",\"left__position\":\"registration_left__position__yoGEq\",\"img\":\"registration_img__SVQNl\",\"title\":\"registration_title__simAO\",\"right\":\"registration_right__H3gaP\"};"],"names":["authValidationSchema","Yup","shape","email","min","max","matches","required","password","confirmPassword","oneOf","username","loginValidationSchema","validationSchema","type","testResult","zxcvbn","num","score","funcProgressColor","style","marginTop","background","border","borderRadius","width","height","boxShadow","dispatch","useDispatch","initialValues","validateOnBlur","onSubmit","values","register","logIn","errors","touched","handleChange","handleBlur","handleSubmit","className","s","src","headerLogo","alt","TextField","InputProps","endAdornment","Icon","color","position","Email","id","name","label","value","onChange","onBlur","error","Boolean","helperText","Lock","Person","Button","classNames","to","sContainer","queries","smallWidth","smallHeight","imgLogin"],"sourceRoot":""}